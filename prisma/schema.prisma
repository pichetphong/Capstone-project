// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String?
  email     String   @unique
  password  String
  age       Int?
  weight    Float?
  height    Float?
  gender    Int? // 0 = female, 1 = male
  goal      Int? // -1 = lose weight, 0 = maintain weight, 1 = gain weight
  dietType  Int? // low carb = -1, balanced = 0, high protein = 1
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // One-to-One relation: A user has only one HealthMetrics
  healthMetrics HealthMetrics?
}

model HealthMetrics {
  id            String   @id @default(uuid())
  bmi           Float
  bmr           Float
  tdee          Float
  bodyFat       Float
  fatMass       Float
  leanMass      Float
  weeklySurplus Float
  dailySurplus  Float
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // One-to-One relation with Macronutrients
  macronutrients Macronutrients?

  // One-to-One relation with User
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique
}

model Macronutrients {
  id        String   @id @default(uuid())
  protein   Float
  fat       Float
  carbs     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // One-to-One relation with HealthMetrics
  healthMetrics   HealthMetrics @relation(fields: [healthMetricsId], references: [id], onDelete: Cascade)
  healthMetricsId String        @unique
}
